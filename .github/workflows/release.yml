name: Release Pipeline

on:
  push:
    tags:
      - "v*" # Triggers on tags like v1.0.0, v1.1.0-beta

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build Docker image (using Dockerfile.prod)
        run: |
          docker build -f Dockerfile.prod -t ghcr.io/${{ github.repository_owner }}/devops-app:${{ steps.get_version.outputs.VERSION }} .
          docker tag ghcr.io/${{ github.repository_owner }}/devops-app:${{ steps.get_version.outputs.VERSION }} ghcr.io/${{ github.repository_owner }}/devops-app:latest

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/devops-app:${{ steps.get_version.outputs.VERSION }}
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/devops-app:${{ steps.get_version.outputs.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/devops-app:latest

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
